source ~/.vam
call vam#ActivateAddons([
  \'Auto_Pairs',
  \'EasyMotion',
  \'Gundo',
  \'Rubytest',
  \'SQLUtilities',
  \'Syntastic',
  \'Tagbar',
  \'The_NERD_Commenter',
  \'The_NERD_tree',
  \'UltiSnips',
  \'YouCompleteMe',
  \'ag',
  \'better-whitespace',
  \'buffet',
  \'ctrlp',
  \'dbext',
  \'eunuch',
  \'fugitive',
  \'github:Konfekt/FastFold',
  \'github:altercation/vim-colors-solarized',
  \'github:danchoi/ri.vim',
  \'github:henrik/vim-ruby-runner',
  \'github:mattn/emmet-vim',
  \'github:t9md/vim-surround_custom_mapping',
  \'gruvbox',
  \'matchit.zip',
  \'notes',
  \'rails',
  \'sleuth',
  \'surround',
  \'textobj-rubyblock',
  \'textobj-user',
  \'vim-airline',
  \'vim-coffee-script',
  \'vim-multiple-cursors',
  \'vim-ruby',
  \'vim-snippets',
\], {'auto_install' : 1})
" 'neocomplcache','github:JazzCore/neocomplcache-ultisnips',
set runtimepath+=~/.vim/vim-addon-manager

" Theming
set background=dark    " Setting dark mode"
":colorscheme gruvbox
syntax enable
if &t_Co > 255
    let g:solarized_termcolors=256
elseif &t_Co > 15
    let g:solarized_termcolors=16
endif

let g:solarized_contrast="high"
let g:solarized_termtrans=1


" Turn on mouse
set mouse=a
" Allows click events to span across the whole screen
if has('mouse_sgr')
  set ttymouse=sgr
endif

" General settings
set hlsearch

" Remaps
map <F6> :Bufferlist<CR>
nmap <F8> :TagbarToggle<CR>
nmap <F9> :NERDTreeToggle<CR>
nmap <a-p> :CtrlPBuffer
nmap <c-q> :bp \| bd#<CR>
nnoremap <F5> :GundoToggle<CR>
set pastetoggle=<F7>

" Indentation
filetype indent plugin on
set autoindent

" Reduce timeout for O
set timeout timeoutlen=3000 ttimeoutlen=100

" Whitespace
let g:strip_whitespace_on_save = 1

" Line numbering
set number
nnoremap <Leader>n :set number!<CR>
if(&relativenumber != 1)
  nnoremap <Leader>e :set relativenumber!<CR>
  set relativenumber
  autocmd InsertEnter * :set number norelativenumber
  autocmd InsertLeave * :set number relativenumber
endif

set omnifunc=syntaxcomplete#Complete

let g:AutoPairsFlyMode = 1
let g:AutoPairsShortcutBackInsert = '<C-l>'
set clipboard=unnamed
set rtp+=~/.fzf

autocmd Filetype gitcommit setlocal spell textwidth=72

" Folding
set foldmethod=syntax
set foldlevel=1

" Set up backups
set backup
silent !mkdir -p ~/.vim_backup/tmp/backups > /dev/null 2>&1
set backupdir=~/.vim/tmp/backups
set writebackup

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" Better autocomplete for ruby
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1

" Nerdtree
let NERDTreeShowLineNumbers=1

" Ultisnips
let g:UltiSnipsExpandTrigger="<c-e>"

let g:surround_custom_mapping = {}
let g:surround_custom_mapping._ = {
            \ 'p':  "<pre> \r </pre>",
            \ 'w':  "%w(\r)",
            \
            \ }
let g:surround_custom_mapping.help = {
            \ 'p':  "> \r <",
            \
            \ }
let g:surround_custom_mapping.ruby = {
            \ '-':  "<% \r %>",
            \ '=':  "<%= \r %>",
            \ '9':  "(\r)",
            \ '5':  "%(\r)",
            \ '%':  "%(\r)",
            \ 'w':  "%w(\r)",
            \ '#':  "#{\r}",
            \ '3':  "#{\r}",
            \ 'b':  "do \r end",
            \ 'e':  "begin \r end",
            \ 'E':  "<<EOS \r EOS",
            \ 'i':  "if \1if\1 \r end",
            \ 'u':  "unless \1unless\1 \r end",
            \ 'c':  "class \1class\1 \r end",
            \ 'm':  "module \1module\1 \r end",
            \ 'd':  "def \1def\1\2args\r..*\r(&)\2 \r end",
            \ 'p':  "\1method\1 do \2args\r..*\r|&| \2\r end",
            \ 'P':  "\1method\1 {\2args\r..*\r|&|\2 \r }",
            \ }
let g:surround_custom_mapping.javascript = {
            \ 'f':  "function(){ \r  }"
            \
            \ }
let g:surround_custom_mapping.vim= {
            \'f':  "function! \r endfunction"
            \
            \ }
